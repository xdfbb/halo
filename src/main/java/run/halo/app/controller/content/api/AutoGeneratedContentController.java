package run.halo.app.controller.content.api;

import static org.springframework.data.domain.Sort.Direction.ASC;
import static org.springframework.data.domain.Sort.Direction.DESC;

import io.swagger.annotations.ApiOperation;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.data.web.SortDefault;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import run.halo.app.model.dto.DouYinDTO;
import run.halo.app.model.dto.WechatAccDTO;
import run.halo.app.model.dto.WeixinAppletDTO;
import run.halo.app.model.dto.ZhiHuDTO;
import run.halo.app.service.AutoGeneratedContentService;

/**
 * Content user controller.
 *
 * @author johnniang
 * @date 2019-04-03
 */
@RestController("AutoGeneratedContentController")
@RequestMapping("/api/content/autoGenerated")
public class AutoGeneratedContentController {

    private final AutoGeneratedContentService autoGeneratedContentService;

    public AutoGeneratedContentController(AutoGeneratedContentService autoGeneratedContentService) {
        this.autoGeneratedContentService = autoGeneratedContentService;
    }

    @GetMapping("wechatAcc")
    @ApiOperation("Gets WechatAcc list")
    public Page<WechatAccDTO> getWechatAccByRank(
        @RequestParam(name = "page", required = false, defaultValue = "0") int page,
        @RequestParam(name = "size", required = false, defaultValue = "18") int size,
        @SortDefault(sort = "ranking", direction = ASC) Sort sort) {

        Page<WechatAccDTO> wechatAccs =
            autoGeneratedContentService.findAllWechatAccByRank(PageRequest.of(page, size, sort));
        return wechatAccs;
    }

    @GetMapping("wechatApplet")
    @ApiOperation("Gets Wechat Applet list")
    public Page<WeixinAppletDTO> getWechatAppletByRank(
        @RequestParam(name = "page", required = false, defaultValue = "0") int page,
        @RequestParam(name = "size", required = false, defaultValue = "18") int size,
        @SortDefault(sort = "ranking", direction = ASC) Sort sort) {
        Page<WeixinAppletDTO> wechatApplet =
            autoGeneratedContentService.findAllWeixinAppletByRank(PageRequest.of(page, size, sort));
        return wechatApplet;
    }

    @GetMapping("zhihuAcc")
    @ApiOperation("Gets WechatAcc list")
    public Page<ZhiHuDTO> getZhiHuAccByRank(
        @RequestParam(name = "page", required = false, defaultValue = "0") int page,
        @RequestParam(name = "size", required = false, defaultValue = "18") int size,
        @SortDefault(sort = "like", direction = DESC) Sort sort) {

        Page<ZhiHuDTO> zhiHuDTOS =
            autoGeneratedContentService.findAllZhiHuByLike(PageRequest.of(page, size, sort));
        return zhiHuDTOS;
    }

    @GetMapping("douyinAcc")
    @ApiOperation("Gets WechatAcc list")
    public Page<DouYinDTO> getDouYinAccByRank(
        @RequestParam(name = "page", required = false, defaultValue = "0") int page,
        @RequestParam(name = "size", required = false, defaultValue = "18") int size,
        @SortDefault(sort = "ranking", direction = ASC) Sort sort) {

        Page<DouYinDTO> douYinDTOS =
            autoGeneratedContentService.findAllDouYinByLike_count(PageRequest.of(page, size, sort));
        return douYinDTOS;
    }

}
